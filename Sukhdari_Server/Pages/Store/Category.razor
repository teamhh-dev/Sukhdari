@page "/category"
@layout StoreAdminLayoutT
@inject IJSRuntime JS
@inject IStoreRepo Store
@inject ICategoryRepo CategoryRepo
@inject NavigationManager Navigator
@attribute [Authorize]

<div class="card card-info">
    <div class="card-header">
        <div class="card-header">
            <div class="card-title float-left pt-2">
                <h3>All Categories</h3>
            </div>

            <div class="d-flex float-right">
                <a href="/addCategory">
                    <button class="btn btn-info text-white"><span class="oi oi-plus mr-0 mr-md-2" />
                        <h5 class="d-md-inline-block d-none pt-1">Add Category</h5>
                    </button>
                </a>
            </div>
        </div>

    </div>
    <div class="card-body">



        <div class="table-responsive mt-2">
            <table class="table" id="category_table">
                <caption>List of All Categories</caption>
                <thead class="thead-light bg-info">
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">Description</th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Categories != null && Categories.Any())
                    {
                        @foreach (var category in Categories)
                        {
                            <tr>
                                <td>@category.Name</td>
                                <td>@category.Description</td>
                                <td class="d-flex align-items-center justify-content-center  flex-column flex-md-row" style="gap: 0.3rem;">
                                    <a href="@($"/category/update/{category.Id}")">
                                        <div class="btn btn-secondary">

                                            <span class="oi oi-eye"></span>
                                        </div>
                                    </a>
                                    <a href="@($"/category/delete/{category.Id}")">
                                        <div class="btn btn-danger">
                                            <span class="oi oi-trash"></span>
                                        </div>
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; }

    public IEnumerable<CategoryDTO> Categories { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationState;


        if (Store.GetStoreByAdminName(authState.User.Identity.Name) == null)
        {
            Navigator.NavigateTo("/storeNotExist");
        }
        else
        {
            var store = Store.GetStoreByAdminName(authState.User.Identity.Name);
            Categories = await CategoryRepo.GetAllCategories(store.Id);
        }
    }
    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            JS.InvokeVoidAsync("CategoryTable");
        }
        return base.OnAfterRenderAsync(firstRender);
    }
}
